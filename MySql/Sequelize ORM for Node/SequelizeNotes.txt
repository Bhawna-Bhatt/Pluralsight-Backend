Sequelize is a promise based object relational mapper which makes it easy to interact
wit SQL Db from node.

Sequelize transforms the JS model to corresponding table structure.

downloadable from 'github/sequelize' / also available from npm

docs.sequelizejs (documentation)

primary key is auto generated by Sequelize with col name id

sequelize is promise based by default - uses promise library called bluebird 
internally (bluebirdjs.com - any of the methods found here can be used for making db 
request) - the two main functions are then and catch 

models are at heart of sequelize and they define key-value pair that create table
and columns

sequelize maps js objects to sql using MODELs

define() method on connection object will create a new model.

sync() method is used to sync with db. it can be called on the model itself 
on it can be called on connection object as well. while calling sync , an object
can be passed to sync which has properties like logging- shows raw sql code ,
force : true --> drop table first and then re-create it

for data - create method

primary keys are autogenerated and auto incremented 

Hooks in sequelize are used if we want to modify data before sending it
to Db. They are called before ( and after ) the events in sequelize are executed.

generatedata.com to generate data

bulkCreate () to load data into table

Transactions allow you to execute a series of operations as a single unit of work,
 ensuring data integrity. If any operation in the transaction fails, all changes
  can be rolled back to maintain a consistent state.
Sequelize, you can use the transaction method.
